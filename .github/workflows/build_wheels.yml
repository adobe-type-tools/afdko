name: Build Python Wheels

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running workflow'
        required: true
  push:
    branches: [develop, master]
    tags:
      - '[0-9].*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Log reason (manual run only)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "Reason for triggering: ${{ github.event.inputs.reason }}"

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # unshallow fetch for setuptools-scm

    - name: Use MSBuild (Windows)
      uses: microsoft/setup-msbuild@v1.0.0
      if: matrix.os == 'windows-latest'

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install deps
      run: python -m pip install wheel setuptools_scm

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.4.1
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: "cp36-*"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
        CIBW_SKIP: "pp* cp*manylinux_i686 cp*manylinux_aarch64 cp*manylinux_ppc64le cp*manylinux_s390x cp*win32"
        CIBW_TEST_REQUIRES: "pytest"
        CIBW_TEST_COMMAND: "pytest {project}/tests"

    - uses: actions/upload-artifact@v1
      with:
        name: afdko-dist
        path: ./dist

    - name: Build sdist
      run: |
        python setup.py sdist
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    - name: Publish package to PyPI
      run: |
        pip install twine
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
