name: Build Python Wheels

on:
  repository_dispatch:
    types: wheel-manual-trigger

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # unshallow fetch for setuptools-scm
        submodules: true

    - name: Use MSBuild (Windows)
      uses: microsoft/setup-msbuild@v1.0.0
      if: matrix.os == 'windows-latest'

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.4.1
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD: "cp36-*"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
        CIBW_SKIP: "pp* cp*manylinux_i686 cp*manylinux_aarch64 cp*manylinux_ppc64le cp*manylinux_s390x"
        CIBW_TEST_REQUIRES: "pytest"
        CIBW_TEST_COMMAND: "pytest {project}/tests"

    - uses: actions/upload-artifact@v1
      with:
        name: afdko-dist
        path: ./dist

    - name: Build sdist
      run: |
        python setup.py sdist
      if: matrix.os == 'ubuntu-latest' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    # - name: Publish package to PyPI
    #   run: |
    #     pip install twine
    #     twine upload dist/*
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.pypi_password }}
    #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
