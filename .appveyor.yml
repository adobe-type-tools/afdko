environment:
  TWINE_USERNAME: "afdko-travis"
  TWINE_PASSWORD:
    secure: myMd6E3niwjGvxEHeChOlg==

  matrix:
    - PYTHON_HOME: "C:\\Python27-x64"
    - PYTHON_HOME: "C:\\Python27"

install:
  - set "PATH=%PYTHON_HOME%;%PYTHON_HOME%\\Scripts;%PATH%"
  # - python --version
  # - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - python -m pip install -U -r requirements-dev.txt
  - python -m pip install pytest
  - python setup.py bdist_wheel
  - for %%f in (dist\*.whl) do (set "WHEEL=%%f")
  - python -m pip install -U --force-reinstall %WHEEL%

build: false

test_script:
  - python -m pytest -v
  - python -m pip uninstall --yes afdko

artifacts:
  # archive the generated packages in the ci.appveyor.com build report
  - path: dist\*.whl
    name: release_wheel

# Deploy wheel on tags to PyPI
on_success:
  - ps: >-
      if($env:APPVEYOR_REPO_TAG -eq 'true') {
        Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
        pip install --upgrade twine
        twine upload dist\*.whl
      } else {
        Write-Output "Not deploying as this is not a tagged commit"
      }

# Deploy wheel on tags to GitHub
deploy:
  provider: GitHub
  auth_token:
    secure: UyKfsObr/shlpP+0U5Zb3EPvmXt0kyKYu940CFNFdNZ8J7Fu54k415R0UNP78t0j
  artifact: release_wheel
  draft: false
  prerelease: false
  on:
    branch: $(APPVEYOR_REPO_TAG_NAME)
    appveyor_repo_tag: true
